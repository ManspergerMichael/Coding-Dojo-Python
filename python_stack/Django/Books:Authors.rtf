{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red46\green174\blue187;
\red47\green180\blue29;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\cssrgb\c20196\c73240\c78250;
\cssrgb\c20238\c73898\c14947;}
\margl1440\margr1440\vieww21980\viewh8700\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 //While I was figuring out the shell commands I accidentally deleted some authors from the table. Questions 10 and 11 are using different authors for the commands and I don\'92t have the time to restart this assignment.\
\
//SETUP\
>>> books.objects.create(name = "C Sharp", desc = "C Sharp programming")\
<books: books object>\
>>> books.objects.create(name = "Java", desc = "Java")\
<books: books object>\
>>> books.objects.create(name = "Python", desc = "Python")\
<books: books object>\
>>> books.objects.create(name = "PHP", desc = "PHP")\
<books: books object>\
>>> books.objects.create(name = "Ruby", desc = "Ruby")\
<books: books object>\
>>> authors.objects.create(first_name = "mike", last_name = "M", email = "email")\
<authors: authors object>\
>>> authors.objects.create(first_name = "Abel", last_name = "A", email = "email")\
<authors: authors object>\
>>> authors.objects.create(first_name = "Bill", last_name = "B", email = "email")\
<authors: authors object>\
>>> authors.objects.create(first_name = "Jadee", last_name = "J", email = "email")\
<authors: authors object>\
>>> authors.objects.create(first_name = "Jay", last_name = "Jay", email = "email")\
<authors: authors object>\
\
\
(djangoEnv) Michaels-MacBook-Pro:main michaelmansperger$ python manage.py makemigrations\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf4 \cb3 Migrations for 'book_authors':
\f0\b0 \cf2 \cb3 \
  
\f1\b \cf2 \cb3 apps/book_authors/migrations/0002_authors_notes.py
\f0\b0 \cf2 \cb3 :\
    - Add field notes to authors\
(djangoEnv) Michaels-MacBook-Pro:main michaelmansperger$ python manage.py migrate\

\f1\b \cf4 \cb3 Operations to perform:
\f0\b0 \cf2 \cb3 \

\f1\b \cf2 \cb3   Apply all migrations: 
\f0\b0 \cf2 \cb3 DojoNinjas, admin, auth, book_authors, contenttypes, sessions\

\f1\b \cf4 \cb3 Running migrations:
\f0\b0 \cf2 \cb3 \
  Rendering model states...
\f1\b \cf5 \cb3  DONE
\f0\b0 \cf2 \cb3 \
  Applying book_authors.0002_authors_notes...
\f1\b \cf5 \cb3  OK\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 \cb3 books.objects.first().authors\
<django.db.models.fields.related_descriptors.ManyRelatedManager object at 0x10f76b910>\
\
authors.objects.first().books\
<django.db.models.fields.related_descriptors.ManyRelatedManager object at 0x10f79bed0>\
//END SETUP\
\
#1\
>>> b = books.objects.get(name = "C Sharp")\
>>> b.name = "C#"\
>>> b.save()\
\
>>> books.objects.all().values('name')\
<QuerySet [\{'name': u'C#'\}, \{'name': u'Java'\}, \{'name': u'Python'\}, \{'name': u'PHP'\}, \{'name': u'Ruby'\}]>\
\
#2\
>>> a = authors.objects.get(id = 5)\
>>> a.first_name = "Ketul"\
>>> a.save()\
>>> authors.objects.all().values('first_name')\
<QuerySet [\{'first_name': u'mike'\}, \{'first_name': u'Abel'\}, \{'first_name': u'Bill'\}, \{'first_name': u'Jadee'\}, \{'first_name': u'Ketul'\}]>\
\
#3\
bookOne = books.objects.first()\
>>> bookTwo = books.objects.get(id = 2)\
>>> this_author = authors.objects.first()\
>>> this_author.books.add(bookOne)\
>>> this_author.books.add(bookTwo)\
authors.objects.all().values('books')\
<QuerySet [\{'books': 1\}, \{'books': 2\}, \{'books': None\}, \{'books': None\}, \{'books': None\}, \{'books': None\}]>\
\
#4\
>>> bookThree = books.objects.get(id = 3)\
>>> this_author = authors.objects.get(id = 2)\
>>> this_author.books.add(bookOne)\
>>> this_author.books.add(bookTwo)\
>>> this_author.books.add(bookThree)\
>>> authors.objects.all().values('books')\
authors.objects.all().values('books')\
<QuerySet [\{'books': 1\}, \{'books': 2\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': None\}, \{'books': None\}, \{'books': None\}]>\
\
#5\
>>> this_author = authors.objects.get(id = 3)\
>>> bookFour = books.objects.get(id = 4)\
>>> this_author.books.add(bookOne)\
>>> this_author.books.add(bookTwo)\
>>> this_author.books.add(bookThree)\
>>> this_author.books.add(bookFour)\
>>> authors.objects.all().values('books')\
<QuerySet [\{'books': 1\}, \{'books': 2\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': 4\}, \{'books': None\}, \{'books': None\}]>\
\
#6\
>>> bookFive = books.objects.get(id = 5)\
>>> this_author = authors.objects.last()\
>>> this_author.books.add(bookOne)\
>>> this_author.books.add(bookTwo)\
>>> this_author.books.add(bookThree)\
>>> this_author.books.add(bookFour)\
>>> this_author.books.add(bookFive)\
>>> authors.objects.all().values('books')\
<QuerySet [\{'books': 1\}, \{'books': 2\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': 4\}, \{'books': None\}, \{'books': 1\}, \{'books': 2\}, \{'books': 3\}, \{'books': 4\}, \{'books': 5\}]>\
\
#7\
books.objects.get(id = 3).authors.values()\
<QuerySet [\{'first_name': u'Abel', 'last_name': u'A', 'notes': u'Alcoholic', 'updated_at': datetime.datetime(2018, 4, 19, 0, 59, 30, 637934, tzinfo=<UTC>), u'id': 2, 'email': u'email', 'created_at': datetime.datetime(2018, 4, 19, 0, 59, 30, 637886, tzinfo=<UTC>)\}, \{'first_name': u'Bill', 'last_name': u'B', 'notes': u'Alcoholic', 'updated_at': datetime.datetime(2018, 4, 19, 0, 59, 40, 403859, tzinfo=<UTC>), u'id': 3, 'email': u'email', 'created_at': datetime.datetime(2018, 4, 19, 0, 59, 40, 403825, tzinfo=<UTC>)\}, \{'first_name': u'Ketul', 'last_name': u'Jay', 'notes': u'Alcoholic', 'updated_at': datetime.datetime(2018, 4, 19, 1, 50, 32, 615197, tzinfo=<UTC>), u'id': 5, 'email': u'email', 'created_at': datetime.datetime(2018, 4, 19, 1, 0, 12, 276938, tzinfo=<UTC>)\}]>\
\
#8\
>>> books.objects.get(id = 3).authors.values('first_name')\
<QuerySet [\{'first_name': u'Abel'\}, \{'first_name': u'Bill'\}, \{'first_name': u'Ketul'\}]>\
>>> books.objects.get(id = 3).authors.first()\
<authors: authors object>\
>>> books.objects.get(id = 3).authors.first().delete()\
(4, \{u'book_authors.authors_books': 3, u'book_authors.authors': 1\})\
>>> books.objects.get(id = 3).authors.values('first_name')\
<QuerySet [\{'first_name': u'Bill'\}, \{'first_name': u'Ketul'\}]>\
\
#9\
>>> books.objects.get(id = 2).authors.values('first_name')\
<QuerySet [\{'first_name': u'mike'\}, \{'first_name': u'Bill'\}]>\
>>> this_author.books.add(bookTwo)\
>>> books.objects.get(id = 2).authors.values('first_name')\
<QuerySet [\{'first_name': u'mike'\}, \{'first_name': u'Bill'\}, \{'first_name': u'Jadee'\}]>\
\
#10\
this_author = authors.objects.get(id = 3)\
>>> this_author.books.all().values('name')\
<QuerySet [\{'name': u'C#'\}, \{'name': u'Java'\}, \{'name': u'Python'\}, \{'name': u'PHP'\}]>\
\
#11\
>>> this_author = authors.objects.get(id = 4)\
>>> this_author.books.all().values('name')\
<QuerySet [\{'name': u'Java'\}]>\
}